@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Extensibility
@using Dynamicweb.Content
@using System
@using System.IO

@{
    string pageId = GetGlobalValue("Global:Page.ID").ToString();
    string productId = GetString("Ecom:Product.ID");
    string uniqueId = GetString("Ecom:Product.ID") + GetString("Ecom:Product.VariantID");
    string onSale = GetString("Ecom:Product.Discount.Price.PriceWithVATFormatted") == GetString("Ecom:Product.Price.PriceWithVATFormatted") ? "u-hidden" : "";
    string currentPrice = AddSpaceAfterCurrency(GetString("Ecom:Product.Discount.Price.PriceWithVATFormatted") == GetString("Ecom:Product.Price.PriceWithVATFormatted") ? GetString("Ecom:Product.Price.PriceWithVATFormatted") : GetString("Ecom:Product.Discount.Price.PriceWithVATFormatted"));
    string hideHelpText = "";
    string feedId = GetPageIdByNavigationTag("ProductsFeed").ToString();
    int featuresCount = 0;
    int thumbsCount = GetLoop("Details").Count;
    string requestQuery = GetGlobalValue("Global:Request.Query");

    foreach (LoopItem customField in GetLoop("CustomFieldValues"))
    {
        if (!String.IsNullOrEmpty(customField.GetString("Product.CustomField.Value.Clean")))
        {
            featuresCount++;
        }
    }

    foreach (LoopItem customField in GetLoop("ProductCategories"))
    {
        foreach (LoopItem field in customField.GetLoop("ProductCategoryFields"))
        {
            if (!String.IsNullOrEmpty(field.GetString("Ecom:Product.CategoryField.Value")))
            {
                featuresCount++;
            }
        }
    }

    foreach (LoopItem alternativeImage in GetLoop("Ecom:Product.AlternativeImages"))
    {
        if (!String.IsNullOrEmpty(alternativeImage.GetString("Ecom:Product.AlternativeImages.Image")))
        {
            thumbsCount++;
        }
    }

    foreach (LoopItem variantgroup in GetLoop("VariantGroups"))
    {
        foreach (LoopItem variantoption in variantgroup.GetLoop("VariantAvailableOptions"))
        {
            if (variantoption.GetBoolean("Ecom:VariantOption.Selected"))
            {
                hideHelpText = "u-hidden";
            }
        }
    }

    int relatedProductsPageSize = 4;
    int relatedProductsColumnWidth = 3;

    if (Pageview.Device.ToString() == "Mobile")
    {
        relatedProductsPageSize = 1;
        relatedProductsColumnWidth = 12;
    }

    if (Pageview.Device.ToString() == "Tablet")
    {
        relatedProductsPageSize = 3;
        relatedProductsColumnWidth = 4;
    }

    string feedPageUrl = "/Default.aspx?ID=" + GetPageIdByNavigationTag("RelatedProductsFeed");
    string feedFullUrl = feedPageUrl + "&feedType=productCatalog&PageSize=" + relatedProductsPageSize + "&ProdID=" + productId;
    string productContainerId = "Product" + productId;

    string HideStockStatus = GetString("Ecom:Product:Field.HideShowStock");

}


@functions {
    string AddSpaceAfterCurrency(string str)
    {
        return str.Insert(str.IndexOfAny("0123456789-".ToCharArray()), " ");
    }
}

<!-- Trigger for the image modal -->
<input type="checkbox" id="ImageModalTrigger" class="modal-trigger" />

<!-- Image modal -->
<div class="modal-container">
    <label for="ImageModalTrigger" id="ImageModalOverlay" class="modal-overlay"></label>
    <div class="modal modal--full" id="ImageModal">
        <div class="modal__body">
            <img id="FullImage" class="modal--full__img" src="@GetString("Ecom:Product.ImageLarge.Default.Clean")" alt="@GetString("Ecom:Product.Name")" />
        </div>
    </div>
</div>

<div class="paragraph-container__grid--bleed-x paragraph-container__grid--bleed-y">
    <div class="grid product" id="productGrid">
        @* Image block with optional thumbs *@
        @if (!String.IsNullOrEmpty(GetString("Ecom:Product.ImageLarge.Default.Clean")))
        {
            <div class="grid__col-md-6 grid__col-sm-6">
                <div class="grid grid--bleed">
                    @if (thumbsCount > 0)
                {
                        <div class="grid__col-2 u-hidden-xxs product__thumbs dw-mod">
                            <div class="thumb-list">
                                <div class="thumb-list__item thumb-list__item--active dw-mod js-thumb-btn" onmouseover="ImageList.LoadImage(this)" data-for="Image_@productId" data-full-image="@GetString("Ecom:Product.ImageLarge.Default.Clean")" data-image-path="/Admin/Public/GetImage.ashx?width=550&amp;height=550&amp;crop=5&DoNotUpscale=true&amp;Compression=75&amp;image=@GetString("Ecom:Product.ImageLarge.Default.Clean")"><img src="/Admin/Public/GetImage.ashx?width=100&amp;height=100&amp;crop=5&amp;DoNotUpscale=true&amp;Compression=75&amp;image=@GetString("Ecom:Product.ImageLarge.Default.Clean")" alt="@GetString("Ecom:Product.Name")"></div>

                                @foreach (LoopItem alternativeImage in GetLoop("Ecom:Product.AlternativeImages"))
                                {
                                    if (!String.IsNullOrEmpty(alternativeImage.GetString("Ecom:Product.AlternativeImages.Image")))
                                    {
                                        string fullImage = alternativeImage.GetString("Ecom:Product.AlternativeImages.Image");
                                        string image = "/Admin/Public/GetImage.ashx?width=550&amp;height=550&amp;crop=5&DoNotUpscale=true&amp;Compression=75&amp;image=" + alternativeImage.GetString("Ecom:Product.AlternativeImages.Image");
                                        string thumb = "/Admin/Public/GetImage.ashx?width=100&amp;height=100&amp;crop=5&DoNotUpscale=true&amp;Compression=75&amp;image=" + alternativeImage.GetString("Ecom:Product.AlternativeImages.Image");

                                        <div class="thumb-list__item dw-mod js-thumb-btn" onmouseover="ImageList.LoadImage(this)" data-for="Image_@productId" data-full-image="@fullImage" data-image-path="@image"><img src="@thumb" alt="@GetString("Ecom:Product.Name")"></div>
                                    }
                                }

                                @foreach (LoopItem detail in GetLoop("Details"))
                                {
                                    string fullImage = detail.GetString("Ecom:Product:Detail.Image.Clean");
                                    string image = "/Admin/Public/GetImage.ashx?width=550&amp;height=550&amp;crop=5&DoNotUpscale=true&amp;Compression=75&amp;image=" + detail.GetString("Ecom:Product:Detail.Image.Clean");
                                    string thumb = "/Admin/Public/GetImage.ashx?width=100&amp;height=100&amp;crop=5&DoNotUpscale=true&amp;Compression=75&amp;image=" + detail.GetString("Ecom:Product:Detail.Image.Clean");

                                    <div class="thumb-list__item dw-mod js-thumb-btn" onmouseover="ImageList.LoadImage(this)" data-for="Image_@productId" data-full-image="@fullImage" data-image-path="@image"><img src="@thumb" alt="@GetString("Ecom:Product.Name")"></div>
                                }
                            </div>
                        </div>
                    }
                    <div class="grid__col-auto">
                        @if (GetString("Ecom:Product.Discount.Price.PriceWithVATFormatted") != GetString("Ecom:Product.Price.PriceWithVATFormatted"))
                        {
                            <div class="sticker u-margin-left dw-mod">@Translate("Sale!")</div>
                        }
                        <label for="ImageModalTrigger" class="product__image-container">
                            <img class="thumb-image-view product__image-container__image dw-mod" onclick="document.getElementById('FullImage').src = this.getAttribute('data-full-image')" id="Image_@productId" src="/Admin/Public/GetImage.ashx?crop=5&height=550&width=550&Compression=75&DoNotUpscale=true&image=@GetString("Ecom:Product.ImageLarge.Default.Clean")" data-full-image="@GetString("Ecom:Product.ImageLarge.Default.Clean")" alt="@GetString("Ecom:Product.Name")" />
                        </label>
                    </div>
                </div>
            </div>
        }

        @* Primary product informations *@
        <div class="grid__col-auto product__info dw-mod">
            <div class="grid__cell">
                <div class="u-pull--left product__title dw-mod">
                    <h1 class="u-no-margin">@GetString("Ecom:Product.Name") @GetString("Ecom:Product.SelectedVariantComboName")</h1>
                    <div class="item-number dw-mod">@GetString("Ecom:Product.Number")</div>
                </div>
                @*<div class="u-pull--right">
                        @if (Dynamicweb.Core.Converter.ToBoolean(GetGlobalValue("Global:Extranet.UserName")))
                        {
                            string favoriteId = "Favorite" + GetString("Ecom:Product.ID");
                            <div id="@favoriteId" class="favorites favorites--md u-pull--right dw-mod">
                                <div>
                                    @{ string favorite = GetBoolean("Ecom:Product.IsProductInFavoriteList") ? "fa fa-star" : "fa fa-star-o"; }
                                    <i class="@favorite fa-1_5x"></i>
                                </div>

                                <div class="favorites-list__container dw-mod">
                                    <ul class="list list--clean dw-mod">
                                        @foreach (LoopItem listType in GetLoop("CustomerCenter.ListTypes"))
                                        {
                                            foreach (LoopItem list in listType.GetLoop("CustomerCenter.ProductLists"))
                                            {
                                                <li>
                                                    @{string favLinkType = list.GetString("Ecom:Product.List.IsProductInThisList") == "True" ? list.GetString("Ecom:Product.RemoveFromThisList") : list.GetString("Ecom:Product.AddToThisListAction");}
                                                    @{string isInListIcon = list.GetString("Ecom:Product.List.IsProductInThisList") == "True" ? "fa fa-star" : "fa fa-star-o";}
                                                    <a href="@favLinkType" class="list__link dw-mod"><i class="@isInListIcon"></i> @list.GetValue("Ecom:CustomerCenter.List.Name")</a>
                                                </li>
                                                            }
                                                        }
                                    </ul>
                                </div>
                            </div>
                                                        }
                    </div>*@

                <div>
                    <div class="u-border-bottom u-full-width u-pull--left"></div>

                    @*
                           // Delivery + stock information
                        @if (HideStockStatus == "False")
                        {
                            string stockIcon = GetInteger("Ecom:Product.Stock") > 0 ? "stock-icon--in" : "stock-icon--not";
                            <table class="table table--clean delivery-and-stock-info dw-mod">
                                <tr>
                                    <td class="u-no-padding">@GetString("Ecom:Product:Stock.Text") <div class="stock-icon @stockIcon"></div></td>
                                    @if (!String.IsNullOrEmpty(GetString("Ecom:Product:Stock.Text")) || !String.IsNullOrEmpty(GetString("Ecom:Product:Stock.DeliveryText")))
                                    {
                                        if (!String.IsNullOrEmpty(GetString("Ecom:Product:Stock.DeliveryText")))
                                        {
                                            <td class="u-no-padding u-ta-right">@Translate("Shipping") @GetString("Ecom:Product:Stock.DeliveryText") @GetString("Ecom:Product:Stock.DeliveryUnit")</td>
                                        }
                                    }
                                </tr>
                            </table>

                        }
                    *@
                    @* Short description *@
                    @if (!String.IsNullOrEmpty(GetString("Ecom:Product.ShortDescription")))
                    {
                        <div class="introduction-text">
                            @GetString("Ecom:Product.ShortDescription")
                        </div>
                    }
                    @*Certification images*@
                    @if (!String.IsNullOrEmpty(GetString("Ecom:Product:Field.Certification.Value.Clean")))
                    {
                        string[] certStrArr = GetString("Ecom:Product:Field.Certification.Value.Clean").Split(',');
                        <div class="grid__col-12 u-no-padding">
                            <div class="grid">

                                @foreach (string certStrItem in certStrArr)
                                {
                                    <div>
                                        <img class="grid__cell-img" style="padding-right: 3px" src="/Admin/Public/GetImage.ashx?Image=/Files/Images/Ecom/Certification/@(certStrItem).jpg&Format=jpg&Height=70&Crop=0&DoNotUpscale=1" alt="certification image" />
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    @* Variants *@
                    @if (GetLoop("VariantGroups").Count > 0)
                    {
                        <small id="helpText_@productId" class="help-text @hideHelpText">@Translate("Please select a size and/or color!")</small>
                        string containerId = "Variants" + productId;
                        <div>
                            <div id="@containerId" data-product-id="@productId">
                                @foreach (LoopItem variantGoup in GetLoop("VariantGroups"))
                                {
                                    <div>
                                        <div class="u-bold">@variantGoup.GetString("Ecom:VariantGroup.Name")</div>
                                        <div>
                                            @foreach (LoopItem variantOption in variantGoup.GetLoop("VariantAvailableOptions"))
                                            {
                                                string selected = variantOption.GetBoolean("Ecom:VariantOption.Selected") ? "checked" : "";

                                                if (!string.IsNullOrEmpty(variantOption.GetString("Ecom:VariantOption.ImgSmall.Clean")))
                                                {
                                                    <img src="/Admin/Public/GetImage.ashx?width=100&amp;height=50&amp;crop=5&amp;Compression=75&amp;image=/Images/@variantOption.GetString("Ecom:VariantOption.ImgSmall.Clean")" title="@variantOption.GetString("Ecom:VariantOption.Name")" id="@variantOption.GetString("Ecom:VariantOption.ID")" data-product-id="@productId" onclick="Variants.UpdateVariants(this, false)" class="btn btn--tag @selected" data-check="@selected" />
                                                }
                                                else
                                                {
                                                    <button type="button" id="@variantOption.GetString("Ecom:VariantOption.ID")" data-product-id="@productId" onclick="Variants.UpdateVariants(this, false)" class="btn btn--tag @selected" data-check="@selected">@variantOption.GetString("Ecom:VariantOption.Name")</button>
                                                }
                                            }
                                        </div>
                                    </div>
                                }
                            </div>

                        </div>
                    }

                    @* BOMProducts *@
                    @if (GetLoop("BOMProducts").Count > 0)
                    {
                        <h2 class="section-title">@Translate("Including products")</h2>
                        foreach (LoopItem BOMProductItem in GetLoop("BOMProducts"))
                        {
                            string link = "/" + BOMProductItem.GetString("Ecom:Product.LinkGroup.Clean") + (!String.IsNullOrEmpty(BOMProductItem.GetString("Ecom:Product.VariantID")) ? "&VariantID=" + BOMProductItem.GetString("Ecom:Product.VariantID") : "");
                            <div class="grid__col--border grid">
                                <div class="grid__cell grid__cell--align-middle-left">
                                    <a href="@link" class="u-pull--left u-margin-right">
                                        <img src="/Admin/Public/GetImage.ashx?width=50&image=@BOMProductItem.GetString("Ecom:Product.ImageSmall.Default.Clean")&Compression=99" />
                                    </a>
                                    <a href="@link">@BOMProductItem.GetString("Ecom:Product.Name")</a>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>

            @* Buy block *@
            <div class="grid__cell-footer">
                <div class="grid__cell product__price-actions js-ajax-container dw-mod" id="PriceAndActions" data-template="PricesAndActionsTemplate" data-json-feed="/Default.aspx?ID=@feedId&ProductID=@productId"></div>
                <input type="hidden" value="@GetString("Ecom:Product.VariantID.Extented")" name="Variant" id="Variant_@GetString("Ecom:Product.ID")" />
            </div>
        </div>
    </div>

    <div class="grid">
        @* Long description *@
        @if (!String.IsNullOrEmpty(GetString("Ecom:Product.LongDescription")))
        {
            <div class="grid__col-12">
                <h2 class="section-title">@Translate("Description")</h2>

                <div class="grid grid--bleed">
                    <div class="grid__col-lg-8 grid__col-md-8 grid__col-sm-12 grid__col-xs-12 product__description dw-mod">
                        @GetString("Ecom:Product.LongDescription")
                    </div>
                </div>
            </div>
        }

        @* Features lists *@
        @if (featuresCount > 0 && featuresCount < 10)
        {
            <div class="grid__col-12 product__features dw-mod">
                <h2 class="section-title">@Translate("Product information")</h2>

                <div class="grid grid--bleed">
                    <div class="grid__col-lg-8 grid__col-md-8 grid__col-sm-12 grid__col-xs-12">
                        @if (GetLoop("CustomFieldValues").Count > 0)
                        {
                            <table class="table table--clean table--compact">
                                @foreach (LoopItem customField in GetLoop("CustomFieldValues").Where(x => x.GetString("Product.CustomField.System") != "HideShowStock"))
                                {

                                    string fieldValue = customField.GetString("Product.CustomField.Value");

                                    if (customField.GetLoop("Product.CustomField.Options").Count > 0)
                                    {
                                        fieldValue = "";
                                        int count = 0;

                                        foreach (LoopItem customFieldOptions in customField.GetLoop("Product.CustomField.Options"))
                                        {
                                            if (customFieldOptions.GetBoolean("Product.CustomField.Option.IsSelected"))
                                            {
                                                if (count != 0)
                                                {
                                                    fieldValue += ", ";
                                                }

                                                fieldValue += customFieldOptions.GetString("Product.CustomField.Option.Name");
                                                count++;
                                            }
                                        }
                                    }

                                    if (fieldValue == "False")
                                    {
                                        fieldValue = Translate("No");
                                    }

                                    if (fieldValue == "True")
                                    {
                                        fieldValue = Translate("Yes");
                                    }

                                    if (!String.IsNullOrEmpty(customField.GetString("Product.CustomField.Name")) && !String.IsNullOrEmpty(fieldValue))
                                    {
                                        <tr>
                                            <td width="160">@customField.GetString("Product.CustomField.Name"):</td>
                                            @if (!String.IsNullOrEmpty(customField.GetString("Document.FullPath")))
                                            {
                                                <td class="u-ta-left"><a href="@customField.GetString("Document.FullPath")" download title="@Translate("Download")"><i class="fa @getIconForFile(fieldValue)"></i> @fieldValue</a></td>
                                            }
                                            else
                                            {
                                                string[] extArr = { ".jpg", ".png", ".gif", ".jpeg" };

                                                if (extArr.Any(x => customField.GetString("Product.CustomField.Value").Contains(x)))
                                                {
                                                    <td class="u-ta-left">
                                                        <img src="/Admin/Public/Getimage.ashx?height=50&amp;compression=75&amp;Crop=5&amp;image=@customField.GetString("Product.CustomField.Value")" alt="@fieldValue" />
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td class="u-ta-left"><span property="identifier">@fieldValue</span></td>
                                                }
                                            }
                                        </tr>
                                    }

                                }


                            </table>
                        }

                        @if (GetLoop("ProductCategories").Count > 0)
                        {
                            <table class="table table--clean table--compact u-margin-bottom">
                                @foreach (LoopItem categoryGroup in GetLoop("ProductCategories"))
                                {
                                    int fieldsCount = 0;
                                    foreach (LoopItem categoryField in categoryGroup.GetLoop("ProductCategoryFields"))
                                    {
                                        if (!String.IsNullOrEmpty(categoryField.GetString("Ecom:Product.CategoryField.Value")))
                                        {
                                            fieldsCount++;
                                        }
                                    }

                                    if (fieldsCount > 0)
                                    {
                                        <tr>
                                            <td colspan="2" class="u-ta-left table__section-header dw-mod">@categoryGroup.GetString("Ecom:Product.Category.Name")</td>
                                        </tr>

                                        foreach (LoopItem categoryField in categoryGroup.GetLoop("ProductCategoryFields"))
                                        {
                                            string fieldValue = categoryField.GetString("Ecom:Product.CategoryField.Value");

                                            if (fieldValue == "False")
                                            {
                                                fieldValue = Translate("No");
                                            }

                                            if (fieldValue == "True")
                                            {
                                                fieldValue = Translate("Yes");
                                            }

                                            if (!String.IsNullOrEmpty(categoryField.GetString("Ecom:Product.CategoryField.Label")) && !String.IsNullOrEmpty(fieldValue))
                                            {
                                                <tr>
                                                    <td width="160">@categoryField.GetString("Ecom:Product.CategoryField.Label"):</td>
                                                    @if (categoryField.GetString("Ecom:Product.CategoryField.TypeID") == "9")
                                                    {

                                                        <td class="u-ta-left"><a href="@fieldValue" download title="@Translate("Download")"><i class="fa @getIconForFile(fieldValue)"></i> @fieldValue</a></td>
                                                    }
                                                    else if (categoryField.GetString("Ecom:Product.CategoryField.TypeID") == "15")
                                                    {
                                                        <td class="u-ta-left"><span property="identifier">@categoryField.GetString("Ecom:Product.CategoryField.OptionLabel")</span></td>
                                                    }
                                                    else if (categoryField.GetString("Ecom:Product.CategoryField.TypeID") == "8")
                                                    {
                                                        <td class="u-ta-left"><a property="identifier" href="@fieldValue">@fieldValue</a></td>
                                                    }
                                                    else
                                                    {
                                                        <td class="u-ta-left"><span property="identifier">@fieldValue</span></td>
                                                    }
                                                </tr>
                                            }
                                        }
                                    }
                                }
                            </table>
                        }
                    </div>
                </div>
            </div>
        }


        @if (featuresCount >= 10)
        {
            <div class="grid__col-12 grid__col--bleed-y">
                <h2 class="section-title">@Translate("Product information")</h2>

                <input type="checkbox" id="expandable-text-trigger" class="expandable-text-trigger" />
                <div class="expandable-text-container">
                    <div class="expandable-text-container__content dw-mod">
                        <div class="grid grid--bleed">
                            <div class="grid__col-lg-8 grid__col-md-8 grid__col-sm-12 grid__col-xs-12">
                                @if (GetLoop("CustomFieldValues").Count > 0)
                                {
                                    <table class="table table--clean table--compact">
                                        @foreach (LoopItem customField in GetLoop("CustomFieldValues"))
                                        {
                                            string fieldValue = customField.GetString("Product.CustomField.Value.Clean");

                                            if (customField.GetLoop("Product.CustomField.Options").Count > 0)
                                            {
                                                fieldValue = "";
                                                int count = 0;

                                                foreach (LoopItem customFieldOptions in customField.GetLoop("Product.CustomField.Options"))
                                                {
                                                    if (customFieldOptions.GetBoolean("Product.CustomField.Option.IsSelected"))
                                                    {
                                                        if (count != 0)
                                                        {
                                                            fieldValue += ", ";
                                                        }

                                                        fieldValue += customFieldOptions.GetString("Product.CustomField.Option.Name");
                                                        count++;
                                                    }
                                                }
                                            }

                                            if (fieldValue == "False")
                                            {
                                                fieldValue = Translate("No");
                                            }

                                            if (fieldValue == "True")
                                            {
                                                fieldValue = Translate("Yes");
                                            }

                                            if (!String.IsNullOrEmpty(customField.GetString("Product.CustomField.Name")) && !String.IsNullOrEmpty(fieldValue))
                                            {
                                                <tr>
                                                    <td width="160">@customField.GetString("Product.CustomField.Name"):</td>
                                                    @if (!String.IsNullOrEmpty(customField.GetString("Document.FullPath")))
                                                    {
                                                        <td class="u-ta-left"><a href="@customField.GetString("Document.FullPath")" download title="@Translate("Download")"><span property="identifier"><i class="fa @getIconForFile(fieldValue)"></i> &nbsp;@fieldValue</span></a></td>
                                                    }
                                                    else
                                                    {
                                                        <td class="u-ta-left"><span property="identifier">@fieldValue</span></td>
                                                    }
                                                </tr>
                                            }
                                        }
                                    </table>
                                }

                                @if (GetLoop("ProductCategories").Count > 0)
                                {
                                    <table class="table table--clean table--compact u-margin-bottom">
                                        @foreach (LoopItem categoryGroup in GetLoop("ProductCategories"))
                                        {
                                            int fieldsCount = 0;
                                            foreach (LoopItem categoryField in categoryGroup.GetLoop("ProductCategoryFields"))
                                            {
                                                if (!String.IsNullOrEmpty(categoryField.GetString("Ecom:Product.CategoryField.Value")))
                                                {
                                                    fieldsCount++;
                                                }
                                            }

                                            if (fieldsCount > 0)
                                            {
                                                <tr>
                                                    <td colspan="2" class="u-ta-left table__section-header dw-mod">@categoryGroup.GetString("Ecom:Product.Category.Name")</td>
                                                </tr>

                                                foreach (LoopItem categoryField in categoryGroup.GetLoop("ProductCategoryFields"))
                                                {
                                                    string fieldValue = categoryField.GetString("Ecom:Product.CategoryField.Value");

                                                    if (fieldValue == "False")
                                                    {
                                                        fieldValue = Translate("No");
                                                    }

                                                    if (fieldValue == "True")
                                                    {
                                                        fieldValue = Translate("Yes");
                                                    }

                                                    if (!String.IsNullOrEmpty(categoryField.GetString("Ecom:Product.CategoryField.Label")) && !String.IsNullOrEmpty(fieldValue))
                                                    {
                                                        <tr>
                                                            <td width="160">@categoryField.GetString("Ecom:Product.CategoryField.Label"):</td>
                                                            @if (categoryField.GetString("Ecom:Product.CategoryField.TypeID") == "9")
                                                            {
                                                                <td class="u-ta-left"><a href="@fieldValue" download title="@Translate("Download")"><i class="fa @getIconForFile(fieldValue)"></i> @fieldValue</a></td>
                                                            }
                                                            else if (categoryField.GetString("Ecom:Product.CategoryField.TypeID") == "15")
                                                            {
                                                                <td class="u-ta-left"><span property="identifier">@categoryField.GetString("Ecom:Product.CategoryField.OptionLabel")</span></td>
                                                            }
                                                            else if (categoryField.GetString("Ecom:Product.CategoryField.TypeID") == "8")
                                                            {
                                                                <td class="u-ta-left"><a property="identifier" href="@fieldValue">@fieldValue</a></td>
                                                            }
                                                            else
                                                            {
                                                                <td class="u-ta-left"><span property="identifier">@fieldValue</span></td>
                                                            }
                                                        </tr>
                                                    }
                                                }
                                            }
                                        }
                                    </table>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="u-ta-center">
                        <label for="expandable-text-trigger" class="btn btn--secondary expandable-text-container__btn more dw-mod">@Translate("Show more")</label>
                        <label for="expandable-text-trigger" class="btn btn--secondary expandable-text-container__btn less dw-mod">@Translate("Show less")</label>
                    </div>
                </div>
            </div>
        }

        @*
               // Related products
            <div class="js-ajax-container" id="ProductList" data-template="ProductContainer" data-pre-render-template="ProductPreRenderContainer" data-json-feed="@feedFullUrl"></div>*@
    </div>
</div>

<script id="PricesAndActionsTemplate" type="text/x-template">
    <div class="product__price-actions__price dw-mod">
        <div class="before-price {{onSale}} dw-mod">{{discount}}</div>
        <div class="price dw-mod">{{price}}</div>
    </div>
    <div class="buttons-collection buttons-collection--right product__price-actions__actions dw-mod">
        <button type="button" id="CartButton_{{id}}" class="btn btn--primary btn--condensed dw-mod u-pull--right" name="submit" onclick="Cart.AddToCart(event, '{{id}}', document.getElementById('Quantity_{{id}}').value, 'Unit_{{id}}', 'Variant_{{id}}');"><i class="fa fa-shopping-cart"></i><span class="u-hidden-xs u-hidden-xxs"> @Translate("Add to cart")</span></button>
        <input type="number" class="u-w70px u-pull--right" id="Quantity_{{id}}" name="Quantity" value="1" min="1">
        <input type="checkbox" id="UnitOptions_{{id}}" class="dropdown-trigger" />
        <div class="dropdown u-pull--right u-w150px u-w80px--xs dw-mod {{hasUnits}}">
            @* <label class="dropdown__header dropdown__btn dw-mod" for="UnitOptions_{{id}}">{{unitName}}</label>*@
            <div class="dropdown__content dw-mod" id="unitOptions" data-template="Units"></div>
            <label class="dropdown-trigger-off" for="UnitOptions_{{id}}"></label>
        </div>
        <input type="hidden" value="{{unitId}}" name="Unit" id="Unit_{{id}}" />
    </div>
</script>

<script id="Units" type="text/x-template">
    <div class="dropdown__item dw-mod" onclick="Dynamo.UpdateContent('PriceAndActions', '/Default.aspx?ID=@feedId&ProductID=@productId&UnitID={{value}}')">{{name}}</div>
</script>


@* Script templates for related products *@
<script id="ProductPreRenderContainer" type="text/x-template">
    <div class="u-h600px u-full-width">
        <div class="grid">
            <div class="grid__col-12">
                <div class="pre-render-element pre-render-element--md"></div>
            </div>
        </div>
    </div>
</script>

<script id="ProductContainer" type="text/x-template">
    <div class="u-min-h500px u-full-width">
        <div class="grid">
            <div class="grid__col-12">
                <h2 class="section-title section-title--condensed">@Translate("What about these products?")</h2>
            </div>

            <div class="grid__col-45px grid__col--bleed-x">
                <div class="grid__cell grid__cell--align-middle-left">
                    <button class="btn btn--condensed btn--clean {{prevdisabled}} dw-mod" onclick="Dynamo.UpdateContent('ProductList', '{{prevPage}}')" {{prevdisabled}}><i class="fa fa-chevron-left fa-2x"></i></button>
                </div>
            </div>
            <div class="grid__col-auto grid__col--bleed-x">
                <div id="ProductsContainer" class="grid product-list dw-mod" data-template="ProductGridItemContainer"></div>
            </div>
            <div class="grid__col-45px grid__col--bleed-x">
                <div class="grid__cell grid__cell--align-middle-right">
                    <button class="btn btn--condensed btn--clean {{nextdisabled}} dw-mod" onclick="Dynamo.UpdateContent('ProductList', '{{nextPage}}')" {{nextdisabled}}><i class="fa fa-chevron-right fa-2x"></i></button>
                </div>
            </div>
        </div>
    </div>
</script>

<script id="ProductGridItemContainer" type="text/x-template">
    <div id="Product" class="grid__col-@relatedProductsColumnWidth product-list__list-item dw-mod" data-template="ProductGridItem" data-preloader="false"></div>
</script>

<script id="ProductGridItem" type="text/x-template">
    <div class="grid__cell product-list__grid-item__image dw-mod {{noImage}}">
        <div class="sticker {{onSale}} dw-mod">@Translate("Sale!")</div>
        <a href="{{link}}" onclick="Scroll.SavePosition(event)"><img class="grid__cell-img grid__cell-img--centered" src="/Admin/Public/GetImage.ashx?width=300&amp;height=300&amp;crop=5&amp;Compression=75&amp;image={{image}}" alt="{{name}}" /></a>
    </div>

    <div class="grid__cell product-list__grid-item__price-info dw-mod">
        <a href="{{link}}" onclick="Scroll.SavePosition(event)" title="{{name}}"><h6 class="u-condensed-text">{{name}}</h6></a>
        <div class="item-number dw-mod">{{number}}</div>
        <div class="price dw-mod">{{price}}</div>
        <div class="before-price {{onSale}} dw-mod">{{discount}}</div>
    </div>

    <div class="product-list__grid-item__footer dw-mod">
        <div class="u-ta-center">
            <a href="{{link}}" id="CartButton_{{id}}" class="btn btn--secondary btn--full u-no-margin dw-mod">@Translate("View")</a>
        </div>
    </div>
</script>

@*Variants data generation*@
<script>
    document.addEventListener("DOMContentLoaded", function (event) {
        var variants = [];

        document.getElementById("productGrid").addEventListener('contentLoaded', function (e) {
            if (e.srcElement.classList.contains("js-variants-wrap")) {
                Variants.SetVariantOptionStatesForProductList(e.srcElement);
            }
        }, false);

        @foreach (LoopItem variantgroup in GetLoop("VariantGroups"))
        {
            <text>var optionsArray = [];</text>

            foreach (LoopItem variantoption in variantgroup.GetLoop("VariantAvailableOptions"))
            {
                string variantSelection = variantoption.GetBoolean("Ecom:VariantOption.Selected") ? "checked" : "";

                <text>
        var option = new Variants.VariantOption("@variantoption.GetValue("Ecom:VariantOption.ID")", "@GetString("Ecom:Product.ID")", "@variantoption.GetString("Ecom:VariantOption.Name")", "@variantSelection", "", "@variantoption.GetString("Ecom:VariantOption.Color")", "@variantoption.GetString("Ecom:VariantOption.ImgSmall.Clean")");
        optionsArray.push(option);
        </text>
            }

            <text>
        var group = new Variants.VariantGroup("@GetString("Ecom:Product.ID")_@variantgroup.GetValue("Ecom:VariantGroup.ID")", "@variantgroup.GetValue("Ecom:VariantGroup.Name")", optionsArray);
        variants.push(group);
        </text>
            }

        var combinations = [];
        @foreach (LoopItem variantcomb in GetLoop("VariantStockCombinations"))
            {
                <text>
        combinations.push(new Variants.CombinationItem("@variantcomb.GetValue("Ecom:VariantStockCombination.VariantID")"));
        </text>
            }

        Variants.SetProductFeedId('@feedId');
        Variants.SetProductUrl('/@GetString("Ecom:Product.VariantLinkGroup.Clean")');

  		Dynamo.SetDataInCache(("Variants" + "@productId"), variants);
        Dynamo.SetDataInCache(("Combinations" + "@productId"), combinations);

        document.getElementById("PriceAndActions").addEventListener('contentLoaded', function (e) {
            Variants.InitVariants(variants, combinations, "@productId");
        }, false);
    });
</script>

@functions {
    string getIconForFile(string fileName)
    {
        string ext = Path.GetExtension(fileName);
        string icon = "";
        switch (ext.ToLower())
        {
            case ".pdf":
                icon = "fa-file-pdf-o";
                break;
            case ".xls":
            case ".xlsx":
                icon = "fa-file-excel-o";
                break;
            case ".ppt":
            case ".pptx":
                icon = "fa-file-powerpoint-o";
                break;
            case ".doc":
            case ".docx":
                icon = "fa-file-word-o";
                break;
            case ".jpg":
            case ".jpeg":
            case ".png":
            case ".gif":
                icon = "fa-file-image-o";
                break;
            default:
                icon = "fa-file-o";
                break;
        }
        return icon;
    }
}
<script>
    document.addEventListener("DOMContentLoaded", function (event) {
        var variants = [];

        document.getElementById("productGrid").addEventListener('contentLoaded', function (e) {
            if (e.srcElement.classList.contains("js-variants-wrap")) {
                Variants.SetVariantOptionStatesForProductList(e.srcElement);
            }
        }, false);

        @foreach (LoopItem variantgroup in GetLoop("VariantGroups"))
        {
            <text>var optionsArray = [];</text>

            foreach (LoopItem variantoption in variantgroup.GetLoop("VariantAvailableOptions"))
            {
                string variantSelection = variantoption.GetBoolean("Ecom:VariantOption.Selected") ? "checked" : "";

                <text>
        var option = new Variants.VariantOption("@uniqueId", "@GetString("Ecom:Product.ID")", "@variantoption.GetValue("Ecom:VariantOption.ID")", "@variantoption.GetString("Ecom:VariantOption.Name")", "@variantSelection", "", "@variantoption.GetString("Ecom:VariantOption.Color")", "@variantoption.GetString("Ecom:VariantOption.ImgSmall.Clean")");
        optionsArray.push(option);
        </text>
            }

            <text>
        var group = new Variants.VariantGroup("@GetString("Ecom:Product.ID")_@variantgroup.GetValue("Ecom:VariantGroup.ID")", "@variantgroup.GetValue("Ecom:VariantGroup.Name")", optionsArray);
        variants.push(group);
        </text>
        }

        var combinations = [];
        @foreach (LoopItem variantcomb in GetLoop("VariantStockCombinations"))
        {
        <text>
        combinations.push(new Variants.CombinationItem("@variantcomb.GetValue("Ecom:VariantStockCombination.VariantID")"));
        </text>
        }

        variants = variants.sort(function (a, b) {
            var firstVariantId = a.VariantOptions[0].variantId;
            for (var i = 0; i < combinations.length; i++) {
                var combinationIndex = combinations[i].id.indexOf(firstVariantId);
                if (combinationIndex != -1) {
                    return combinationIndex;
                }
            }
            //should never happen
            return 0;
        });

        Variants.SetProductFeedId('@feedId');
        Variants.SetProductUrl('/@GetString("Ecom:Product.VariantLinkGroup.Clean")');

        HandlebarsBolt.SetDataInCache(("Variants" + "@productId"), variants);
        HandlebarsBolt.SetDataInCache(("Combinations" + "@productId"), combinations);

        document.getElementById("PriceAndActions").addEventListener('contentLoaded', function (e) {
            Variants.InitVariants(variants, combinations, "@productId", "@uniqueId");
        }, false);
    });
</script>
@*Variants data generation*@
@*<script>
    document.addEventListener("DOMContentLoaded", function (event) {
        Facets.Init("productList", '@productCatalogId', '@requestQuery');

        Variants.SetProductFeedId('@productCatalogId');
        Variants.SetViewMode("productList");

        document.getElementById("productList").addEventListener('contentLoaded', function (e) {
            if (e.srcElement.classList.contains("js-variants-wrap")) {
                Variants.SetVariantOptionStatesForProductList(e.srcElement);
            }
        }, false);
    });
</script>
*@