@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.PageViewModel>
@MasterPageFile("Master.cshtml")
@using System.Text.RegularExpressions

@*This is an example implementation of a Case template. 
 You may want to re-configure the itemtype and adjust this template to the specific needs. *@

@{ 
    string fullBackgroundImage = "";
    if (Model.Item.GetFile("Image") != null)
    {
        fullBackgroundImage = "background-image:url(/Admin/Public/GetImage.ashx?width=2500&amp;height=1100&amp;crop=0&amp;Compression=90&amp;DoNotUpscale=true&amp;image=" + Model.Item.GetFile("Image").Path + ");";
    }

    string caseListPageId = GetPageIdByNavigationTag("CasesListFeed").ToString();
    string solutionTypes = "";
    string solutionTypesValues = "";
    string partnerLink = Model.Item.GetItem("PartnerLink") != null ? Model.Item.GetItem("PartnerLink").PageID.ToString() : ""; //This solution is wrong. We need the Item PageId here.

    string cardClass = Pageview.Device.ToString() != "Tablet" ? "paragraph-card" : "";
    string cardFooterClass = Pageview.Device.ToString() != "Tablet" ? "paragraph-card-footer" : "";
}

<div class="grid article">                                                                         

    @* Escape the container and section *@
    </div>
    </section>
    @* ----------------------------------- *@

    <section class="multiple-paragraphs-container u-color-light" style="@fullBackgroundImage">
        <div class="center-container center-container--with-background-image dw-mod">
            <div class="grid center-container--with-background-image">
                <div class="grid__col-md-12 grid__col-xs-12 paragraph-container">
                    <div class="u-ta-center u-middle">
                        <div>
                            <h1 class="article__header article__header--giant" style="color: @Model.Item.GetString("TextColor")">@Model.Item.GetString("BannerHeading")</h1>
                            <div class="article__subheader article__subheader--giant" style="color: @Model.Item.GetString("TextColor")">@Model.Item.GetString("BannerSubheading")</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    @* Re-enter the container and section *@
    <section class="content-container center-container dw-mod">
    <div class="grid">
    @* ----------------------------------- *@

    <div class="grid__col-12"></div>

    @* The descriptions *@
    <article class="grid__col-md-8">
        <h2 class="article__header">@Translate("Challenge")</h2>
        <div class="article__paragraph">@Model.Item.GetString("Challenge")</div>

        <h2 class="article__header">@Translate("Dynamicweb as a solution")</h2>
        <div class="article__paragraph">@Model.Item.GetString("Solution")</div>

        <h2 class="article__header">@Translate("Results")</h2>
        <div class="article__paragraph">@Model.Item.GetString("Results")</div>

        @* Quote *@
        @if (!String.IsNullOrEmpty(Model.Item.GetString("QuoteDescription")))
        {
            <div class="grid article__block">
                <div class="grid__col-auto">
                    @if (Model.Item.GetFile("QuoteImage") != null)
                    {
                        <div class="grid__cell-img grid__cell-img--centered">
                            <img src="/Admin/Public/GetImage.ashx?width=160&amp;height=160&amp;crop=5&amp;Compression=90&amp;image=@Model.Item.GetFile("QuoteImage").Path" class="article__image article__image--ball" />
                        </div>
                    }
                </div>
                <div class="grid__col-md-8">
                    <div class="article__summary u-color-light-gray u-italic"> 
                        "@Model.Item.GetString("QuoteDescription")"
                    </div>
                    <div>
                        - @Model.Item.GetString("QuoteAuthor")
                    </div>
                </div>
            </div>
        }
    </article>

    @* Customer informations *@
    <div class="grid__col-md-4">
        <table class="table">
            @if (Model.Item.GetFile("CustomerLogo") != null) {
                <tr class="table__row--no-border">
                    <td colspan="2">
                        <img src="/Admin/Public/GetImage.ashx?width=300&height=80&amp;crop=5&amp;Compression=90&amp;DoNotUpscale=true&amp;image=@Model.Item.GetFile("CustomerLogo").Path" />
                    </td>
                </tr>
            }
            @if (!String.IsNullOrEmpty(Model.Item.GetString("CustomerCompanyName"))) {
                <tr>
                    <td width="32"><i class="fa fa-user fa-2x u-brand-color-two"></i></td>
                    <td>
                        <div class="u-bold">@Translate("Client")</div>
                        <div>@Model.Item.GetString("CustomerCompanyName")</div>
                    </td>
                </tr>
            }
            @if (!String.IsNullOrEmpty(Model.Item.GetString("CustomerLocation"))) {
                <tr>
                    <td width="32"><i class="fa fa-globe fa-2x u-brand-color-two"></i></td>
                    <td>
                        <div class="u-bold">@Translate("Location")</div>
                        <div>@Model.Item.GetString("CustomerLocation")</div>
                    </td>
                </tr>
            }
            @if (!String.IsNullOrEmpty(Model.Item.GetString("Industry"))) {
                <tr>
                    <td width="32"><i class="fa fa-building fa-2x u-brand-color-two"></i></td>
                    <td>
                        <div class="u-bold">@Translate("Industry")</div>
                        <div>@Model.Item.GetString("Industry")</div>
                    </td>
                </tr>
            }
            @if (Model.Item.GetList("SolutionType") != null) {
                <tr>
                    <td width="32"><i class="fa fa-gear fa-2x u-brand-color-two"></i></td>
                    <td>
                        <div class="u-bold">@Translate("Functionality")</div>
                        <div>
                            @{ 
                                int count = 0;

                                foreach (var type in Model.Item.GetList("SolutionType").SelectedOptions)
                                {
                                    if (count > 0) {
                                        solutionTypes += ", ";
                                        solutionTypesValues += ", ";
                                    }

                                    solutionTypes += type.Name;
                                    solutionTypesValues += type.Value;

                                    count++;
                                }
                            }
                            @solutionTypes
                        </div>
                    </td>
                </tr>
            }
            @if (!String.IsNullOrEmpty(Model.Item.GetString("CustomerWebsiteUrl"))) {
                <tr>
                    <td width="32"><i class="fa fa-desktop fa-2x u-brand-color-two"></i></td>
                    <td>
                        <div class="u-bold">@Translate("Website")</div>
                        <a href="http://@Model.Item.GetString("CustomerWebsiteUrl")">@Model.Item.GetString("CustomerWebsiteUrl")</a>
                    </td>
                </tr>
            }
            
            @if (Model.Item.GetItem("PartnerLink") != null) {
                <tr>
                    <td width="32"><i class="fa fa-address-card fa-2x u-brand-color-two"></i></td>
                    <td>
                        <div class="u-bold">@Translate("Partner")</div>
                        <a href="/Default.aspx?ID=@partnerLink">@Model.Item.GetItem("PartnerLink").GetString("PartnerName")</a>
                    </td>
                </tr>
            }
        </table>
    </div>

    @* Images *@
    @if (Model.Item.GetItems("Gallery") != null)
    {
        if (Model.Item.GetItems("Gallery").Count > 0)
        {
            string mainImage = Model.Item.GetItems("Gallery").FirstOrDefault().GetFile("ImagePath").Path;
            int imagesCount = Model.Item.GetItems("Gallery").Count;

            <div class="grid__col-md-8">
                <label class="gallery" for="GalleryModalTrigger"> 
                    <span class="gallery__main-image">
                        <img src="/Admin/Public/GetImage.ashx?width=992&amp;height=760&amp;crop=0&amp;Compression=75&amp;DoNotUpscale=1&amp;image=@mainImage" class="flex-img" />
                    </span>
                    <span class="gallery__image-counter">
                        <i class="fa fa-camera fa-2x"></i> <span class="gallery__image-counter__number">@imagesCount</span>
                        <span class="gallery__image-counter__text">@Translate("See all") <i class="fa fa-angle-right"></i></span>
                    </span>
                </label>
            </div>

            <div class="grid__col-md-4">

            </div>
        }
    }

    @* Related cases *@
    @* Escape the container and section *@
    </div>
    </section>
    @* ----------------------------------- *@

    <section class="multiple-paragraphs-container u-color-light-gray--bg">
        <div class="center-container dw-mod">
            <div class="grid">
                <div class="grid__col-md-12 grid__col-xs-12 paragraph-container">                                                                                                                     
                    <h1 class="article__header u-no-margin">@Translate("Similar cases")</h1>
                </div>
            </div>

            <div class="js-ajax-container" id="RelatedCases" data-template="RelatedCasesTemplate" data-json-feed="/Default.aspx?ID=@caseListPageId&SolutionType=@solutionTypesValues&ExcludeCaseID=@Model.ID"></div>
    
            <script id="RelatedCasesTemplate" type="text/x-template">
                <div class="grid u-no-margin" id="Cases" data-template="CasesTemplate" ></div>
            </script>

            <script id="CasesTemplate" type="text/x-template">
                <div class="grid__col-md-3 grid__col-sm-3 grid__col-xs-12">
                    <div class="u-ta-center @cardClass">
                        <div class="u-margin-bottom">
                            <a href="{{link}}">              
                                <div class="layered-image {{tintedImage}}" style="background-image:url(/Admin/Public/GetImage.ashx?width=992&amp;height=760&amp;crop=0&amp;Compression=75&amp;DoNotUpscale=true&amp;image={{image}}); background-size: cover;">
                                    <img src="/Admin/Public/GetImage.ashx?width=240&amp;crop=0&amp;Compression=75&amp;DoNotUpscale=true&amp;image={{logo}}" class="u-padding" />
                                </div>
                            </a>
                        </div>

                        <a href="{{link}}">
                            <h2 class="u-no-margin u-margin-bottom">{{title}}</h2>
                        </a>

                        <p>{{summary}}</p>
                    </div>
                    <div class="grid__cell-footer grid--justify-center @cardFooterClass">
                        <div class="u-margin-top u-margin-bottom">
                            <a href="{{link}}" class="btn btn--secondary btn--line-height dw-mod">@Translate("Read the case")</a>
                        </div>
                    </div>
                </div>
            </script>
        </div>
    </section>

    @if (Model.Item.GetItems("Gallery").Count > 0)
    {
        string firstImage = Model.Item.GetItems("Gallery").FirstOrDefault().GetFile("ImagePath").Path;
        int modalImagesCount = Model.Item.GetItems("Gallery").Count;
        List<string> galleryImages = new List<string>();

        foreach (var item in Model.Item.GetItems("Gallery"))
        {
            if (item.GetFile("ImagePath") != null) {
                galleryImages.Add(item.GetFile("ImagePath").Path);
            }
        }
        string galleryImagesArray = string.Join(", ", galleryImages);

        <!-- Trigger for the gallery modal -->
        <input type="checkbox" id="GalleryModalTrigger" class="modal-trigger" />

        <!-- Gallery modal -->
        <div class="modal-container">
            <label for="GalleryModalTrigger" id="GalleryModalOverlay" class="modal-overlay"></label>
            <div class="modal modal--lg modal--full" id="GalleryModal">
                <div class="modal__body">
                    <div class="gallery-slider js-gallery-slider" data-current-image="0" data-total-images="@modalImagesCount" data-images="@galleryImagesArray" >
                        <div class="gallery-slider__image">
                            <img src="/Admin/Public/GetImage.ashx?width=1200&amp;height=820&amp;crop=5&amp;Compression=75&amp;DoNotUpscale=1&amp;image=@firstImage" class="modal--full__img js-gallery-image" />
                        </div>
                        <div class="gallery-slider__image-counter">
                           <span class="js-image-list-counter">1</span> / @modalImagesCount
                        </div>
                        <label class="gallery-slider__close-btn" for="GalleryModalTrigger">
                           <i class="fa fa-times-circle fa-1_5x"></i>
                        </label>
                        <button class="gallery-slider__previous-btn" onclick="ImageList.GetPreviousImage(this)">
                           <i class="fa fa-arrow-circle-left fa-3x"></i>
                        </button>
                        <button class="gallery-slider__next-btn" onclick="ImageList.GetNextImage(this)">
                           <i class="fa fa-arrow-circle-right fa-3x"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }

    @* Re-enter the container and section *@
    <section class="content-container center-container dw-mod">
    <div class="grid">
    @* ----------------------------------- *@
</div>
